name: test

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        python-version:
        - 3.7
        - 3.8
        - 3.9
        - "3.10"
        - "3.11"
        - "3.12-alpha.1"
    env:
      POETRY_VIRTUALENVS_PATH: ~/.cache/poetry

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.cache/poetry
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade poetry tox tox-py
    - name: Install Node dependencies
      run: npm install
    - name: Run npm build
      run: npm run build
    - name: Run tox targets for ${{ matrix.python-version }}
      run: tox --py current
    - uses: codecov/codecov-action@v3
      with:
        name: python-${{ matrix.python-version }}
